# encoding: utf-8

# Telegram API framework core imports
import connectors.db
from telegram.ext import Dispatcher, CallbackContext
from telegram import Update, ParseMode, InlineKeyboardButton, InlineKeyboardMarkup, KeyboardButton, ReplyKeyboardMarkup
from utils.logger import get_logger
from utils.helpers import *
from telegram.ext import CommandHandler, CallbackQueryHandler, MessageHandler
from connectors.db import log_to_db

# Init logger
logger = get_logger(__name__)


def init(dispatcher: Dispatcher):
    """Provide handlers initialization."""
    dispatcher.add_handler(CommandHandler('start', start))
    dispatcher.add_handler(MessageHandler(Filters.location, location))


@log_to_db
def start(update: Update, context: CallbackContext) -> None:
    """Process a /start command."""
    connectors.db.insert_user(update.effective_user.id, update.effective_user.full_name)
    context.bot.send_photo(update.effective_chat.id, open('assets/mai.png', 'rb'),
                           caption=f"–ü—Ä–∏–≤–µ—Ç, <code>{update.effective_user.first_name}</code>. –Ø –º–æ–≥—É –ø–æ–∫–∞–∑–∞—Ç—å —Ç–µ–±–µ "
                                   f"—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ, –∞ —Ç–∞–∫–∂–µ —Å–æ–æ–±—â–∏—Ç—å —Ç–µ–±–µ –≤–µ—á–µ—Ä–æ–º, –∫–∞–∫–∏–µ –∑–∞–≤—Ç—Ä–∞ –±—É–¥—É—Ç –ø–∞—Ä—ã. "
                                   f"üá∑üá∫üá∑üá∫üá∑üá∫. –í—ã–∑–æ–≤–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /menu –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –º–µ–Ω—é.",
                           parse_mode=ParseMode.HTML)
    location_keyboard = KeyboardButton(text="–û—Ç–ø—Ä–∞–≤–∏—Ç—å –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ",
                                       request_location=True)  # creating location button object
    custom_keyboard = [[location_keyboard]]  # creating keyboard object
    reply_markup = ReplyKeyboardMarkup(custom_keyboard, one_time_keyboard=True, resize_keyboard=True)
    context.bot.send_message(update.effective_chat.id,
                             "–†–∞–∑—Ä–µ—à–∏—Ç–µ –¥–æ—Å—Ç—É–ø –∫ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—é, —á—Ç–æ–±—ã –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ.",
                             reply_markup=reply_markup)


@log_to_db
def location(update: Update, context: CallbackContext) -> None:
    context.user_data['loc'] = update.effective_message.location
    context.bot.send_message(update.effective_chat.id, '–î–∞–Ω–Ω—ã–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω—ã!')
